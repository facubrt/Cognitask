Source:Signal%20Properties int SourceCh= 6 // number of digitized and stored channels
Source:Signal%20Properties list SourceChOffset= 6 0 0 0 0 0 0 // Offset for channels in A/D units
Source:Signal%20Properties list SourceChGain= 6 0.003 0.003 0.003 0.003 0.003 0.003 // gain for each channel (A/D units per physical unit)
Source:Signal%20Properties int SampleBlockSize= 8 // number of samples transmitted at a time
Source:Signal%20Properties int SamplingRate= 250Hz // sampling rate
Source:Signal%20Properties list ChannelNames= 6 Fz Cz Pz Oz PO7 PO8 // list of channel names
Source:Buffering int SourceBufferSize= 2s 2s % % // size of data acquisition ring buffer (in blocks or seconds)
Source:Signal%20Properties string DeviceIDMaster= auto auto % % // deviceID for the device whose SYNC goes to the slaves
Source:Signal%20Properties list DeviceIDs= 1 auto // list of gNautilus to be used
Source:Signal%20Properties string HostIP= 127.0.0.1 %% % % // the server IP address
Source:Signal%20Properties int HostPort= 50223 1 % % // the server port
Source:Signal%20Properties string LocalIP= 127.0.0.1 // the local IP address
Source:Signal%20Properties int LocalPort= 50224 1 % % // the local port
Source:Signal%20Properties intlist RefChList= 0 % 0 256 // list of reference channels for each cap
Source:Signal%20Properties list SourceChList= 0 // list of cap.channel to acquire
Source:Signal%20Properties int FilterEnabled= 1 0 0 1 // Enable pass band filter (boolean)
Source:Signal%20Properties float FilterHighPass= 0.5 0.1 0 50 // high pass filter for pass band
Source:Signal%20Properties float FilterLowPass= 30 60 0 4000 // low pass filter for pass band
Source:Signal%20Properties int FilterModelOrder= 8 8 1 12 // filter model order for pass band
Source:Signal%20Properties int FilterType= 2 1 1 3 // pass band filter type: 1 Chebyshev, 2 Butterworth, 3 Bessel (enumeration)
Source:Signal%20Properties int NotchEnabled= 1 0 0 1 // Enable notch filter (boolean)
Source:Signal%20Properties float NotchHighPass= 58 58 0 70 // high pass filter for notch filter
Source:Signal%20Properties float NotchLowPass= 62 62 0 4000 // low pass filter for notch filter
Source:Signal%20Properties int NotchModelOrder= 4 4 1 10 // filter model order for notch filter
Source:Signal%20Properties int NotchType= 2 2 1 3 // pass band filter type: 1 Chebyshev, 2 Butterworth, 3 Bessel (enumeration)
Source:Signal%20Properties int EnableAccelerationData= 1 0 0 1 // enable acceleration data input (boolean)
Source:Signal%20Properties int EnableCounterInput= 1 0 0 1 // enable counter channel input (boolean)
Source:Signal%20Properties int EnableLinkQuality= 1 0 0 1 // enable link quality info input (boolean)
Source:Signal%20Properties int EnableBatteryLevel= 1 0 0 1 // enable battery level input (boolean)
Source:Signal%20Properties int EnableDigitalInputs= 1 0 0 1 // enable digital inputs (boolean)
Source:Signal%20Properties int EnableValidationIndicator= 1 0 0 1 // enable validation indicator input (boolean)
Source:Alignment int AlignChannels= 1 0 0 1 // align channels in time (0=no, 1=yes) (boolean)
Source:Alignment floatlist SourceChTimeOffset= 0 0 % % // time offsets for all source channels (may be empty)
Source:Online%20Processing list TransmitChList= 1 * // list of transmitted channels: Channel names may contain * and ? wildcards,  and character ranges enclosed in []; wildcard patterns may be negated by prepending an exclamation mark.  Ranges of channels may be specified using : or - to separate begin from end.