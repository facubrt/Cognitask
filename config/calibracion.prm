Visualize:Property%20Sets matrix VisPropertySets= 0 1 // row titles are properties in the form "SRCD.Left", columns are property sets
System:Version matrix OperatorVersion= { Framework Revision Build Config Protocol } 1 3.6 N/A,%20N/A MSVC-19.16.27043.0-AMD64,%20release,%202020-10-23Z,%20facub@ USE_DYNAMIC_CRT:TRUE%20USE_OPENMP:ON%20USE_PRECOMPILED_HEADERS:ON%20USE_ASSERTS_IN_RELEASE_BUILDS:OFF 2.3 // operator module version information (noedit)(readonly)
System:Protocol int AutoConfig= 1 1 0 1 // Use AutoConfig protocol extension (boolean)
System:Protocol int OperatorBackLink= 1 1 0 1 // Send final state and signal information to Operator (boolean)
System:Core%20Connections string OperatorIP= 127.0.0.1 127.0.0.1 % % // the Operator module's IP (noedit)(readonly)
Storage:Data%20Location string DataDirectory= C:/Cognitask/Pacientes ..\data % % // path to top level data directory (directory)
Storage:Session string SubjectName= Sujeto Name % % // subject alias
Storage:Session string SubjectSession= 051120 001 % % // three-digit session number
Storage:Session string SubjectRun= 00 00 % % // two-digit run number
Storage:Documentation string ID_System= % // BCI2000 System Code
Storage:Documentation string ID_Amp= % // BCI2000 Amp Code
Storage:Documentation string ID_Montage= % // BCI2000 Cap Montage Code
Visualize:Timing int VisualizeTiming= 0 1 0 1 // visualize system timing (0=no, 1=yes) (boolean)
Visualize:Source%20Signal int VisualizeSource= 1 1 0 1 // visualize raw brain signal (0=no, 1=yes) (boolean)
Visualize:Source%20Signal int VisualizeSourceDecimation= auto auto % % // decimation factor for raw brain signal
Visualize:Source%20Signal int VisualizeSourceBufferSize= auto auto % % // number of blocks to aggregate before sending to operator
Visualize:Source%20Signal int VisualizeSourceTime= 2s 2s 0 % // how much time in Source visualization
Visualize:Source%20Signal int SourceMin= auto // raw signal vis Min Value
Visualize:Source%20Signal int SourceMax= auto // raw signal vis Max Value
Source:Signal%20Properties int SourceCh= 8 16 1 % // number of digitized and stored channels
Source:Signal%20Properties int SampleBlockSize= 8 32 1 % // number of samples transmitted at a time
Source:Signal%20Properties int SamplingRate= 256Hz 256Hz 1 % // sample rate
Source:SignalGeneratorADC list ChannelNames= 0 
Source:SignalGeneratorADC list SourceChOffset= 1 auto 
Source:SignalGeneratorADC list SourceChGain= 1 auto 
Source:SignalGeneratorADC int ModulateAmplitude= 0 0 0 1 // Modulate the amplitude with the mouse (0=no, 1=yes) (boolean)
Source:SignalGeneratorADC int SineChannelX= 0 0 0 % // Channel number of sinewave controlled by mouse x position
Source:SignalGeneratorADC int SineChannelY= 0 0 0 % // Channel number of sinewave controlled by mouse y position (0 for all)
Source:SignalGeneratorADC int SineChannelZ= 0 0 0 % // Channel number of sinewave controlled by mouse key state
Source:SignalGeneratorADC list NaNChannels= 1 auto // Channel numbers set to NaN if space is pressed (empty if not used)
Source:SignalGeneratorADC float SineFrequency= 10Hz 10Hz % % // Frequency of sine wave
Source:SignalGeneratorADC int SineAmplitude= 100muV 100muV % % // Amplitude of sine wave
Source:SignalGeneratorADC int NoiseAmplitude= 30muV 30muV % % // Amplitude of white noise (common to all channels)
Source:SignalGeneratorADC int DCOffset= 0muV 0muV % % // DC offset (common to all channels)
Source:SignalGeneratorADC string AmplitudeMultiplier= 1 1 % % // Expression to multiply amplitude by
Source:SignalGeneratorADC string OffsetMultiplier= % StimulusType % % // Expression to multiply offset by
Source:SignalGeneratorADC int SignalType= 0 0 0 2 // numeric type of output signal:  0: int16, 1: float32, 2: int32 (enumeration)
Source:SignalGeneratorADC matrix SourceProperties= 0 { Frequency Amplitude } // Source properties
Source:SignalGeneratorADC matrix MixingMatrix= 0 1 // Source-to-sensor projection, rows are sources, columns are sensors
Storage:BCI2000FileWriter string FileFormat= dat // format of data file (readonly)
Storage:Documentation string StorageTime= % // time of beginning of data storage
Source:Source%20Filter int NotchFilter= 0 0 0 2 // Power line notch filter: 0: disabled, 1: at 50Hz, 2: at 60Hz (enumeration)
Source:Source%20Filter int HighPassFilter= 0 0 0 2 // Source high pass filter: 0: disabled, 1: at 0.1Hz, 2: at 1Hz (enumeration)
Source:Source%20Filter int LowPassFilter= 0 0 0 4 // Source low pass filter: 0: disabled, 1: at 9Hz, 2: at 30Hz, 3: at 40Hz, 4: at 70Hz (enumeration)
Source:Source%20Filter list UnfilteredChannels= 0 // names or indices of channels to omit from source filter
Source:Alignment int AlignChannels= 1 0 0 1 // align channels in time (0=no, 1=yes) (boolean)
Source:Alignment floatlist SourceChTimeOffset= 0 0 % % // time offsets for all source channels (may be empty)
Visualize:Processing%20Stages int VisualizeAlignmentFilter= 0 0 0 1 // Visualize AlignmentFilter output (boolean)
Source:Online%20Processing list TransmitChList= 1 * // list of transmitted channels: Channel names may contain * and ? wildcards,  and character ranges enclosed in []; wildcard patterns may be negated by prepending an exclamation mark.  Ranges of channels may be specified using : or - to separate begin from end.
Visualize:Processing%20Stages int VisualizeTransmissionFilter= 0 0 0 1 // Visualize TransmissionFilter output (boolean)
System:Protocol int EventLink= 1 1 0 1 // Send events from Operator to Source module (boolean)
Storage:Data%20Location string DataFile= $%7bSubjectName%7d/Calibracion%20$%7bSubjectSession%7d/R$%7bSubjectRun%7d.$%7bFileFormat%7d // name of data file relative to DataDirectory
System:Core%20Connections string OperatorAddress= 127.0.0.1:4002 // (noedit)
System:Core%20Connections string SignalSourceIP= 192.168.0.11 // (readonly)(noedit)
System:Core%20Connections string SignalSourcePort= 60605 // (readonly)(noedit)
System:Version matrix SignalSourceVersion= { Framework Revision Build Config Protocol } 1 3.6 N/A,%20N/A MSVC-19.16.27043.0-AMD64,%20release,%202020-10-23Z,%20facub@ USE_DYNAMIC_CRT:TRUE%20USE_OPENMP:ON%20USE_PRECOMPILED_HEADERS:ON%20USE_ASSERTS_IN_RELEASE_BUILDS:OFF 2.3 // SignalSource version information (noedit)(readonly)
System:Configuration matrix SignalSourceFilterChain= 9 { Filter%20Name Position%20String } DataIOFilter 0 SignalGeneratorADC 1 NullFileWriter 1 BCI2000FileWriter 1 EDFFileWriter 1 GDFFileWriter 1 SourceFilter 1.01 AlignmentFilter 1.1 TransmissionFilter 1.2 // SignalSource filter chain (noedit)(readonly)
System:Configuration matrix Filters= 13 1 /1/DataIOFilter /1/SignalGeneratorADC /1/BCI2000FileWriter /1/SourceFilter /1/AlignmentFilter /1/TransmissionFilter /2/SpatialFilter /2/P3TemporalFilter /2/LinearClassifier /3/ConnectorInput /3/ApplicationBase /3/KeystrokeFilter /3/ConnectorOutput // Filter Directory (noedit)(readonly)
Visualize:Processing%20Stages int VisualizeSpatialFilter= 0 0 0 1 // Visualize SpatialFilter output (boolean)
Filtering:SpatialFilter int SpatialFilterType= 1 2 0 3 // spatial filter type 0: none, 1: full matrix, 2: sparse matrix, 3: common average reference (CAR) (enumeration)
Filtering:SpatialFilter matrix SpatialFilter= 8 8 1 0 0 0 % % % % 0 1 0 0 % % % % 0 0 1 0 % % % % 0 0 0 1 % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % 0 % % // columns represent input channels, rows represent output channels
Filtering:SpatialFilter intlist SpatialFilterCAROutput= 0 // when using CAR filter type: list of output channels, or empty for all channels
Filtering:SpatialFilter int SpatialFilterMissingChannels= 1 0 0 1 // how to handle missing channels 0: ignore, 1: report error (enumeration)
Filtering:P3TemporalFilter int EpochLength= 500ms 500ms 0 % // Length of data epoch from stimulus onset
Filtering:P3TemporalFilter int EpochsToAverage= 2 1 0 % // Number of epochs to average
Filtering:P3TemporalFilter int SingleEpochMode= 0 0 0 1 // Report result after each epoch (boolean)
Visualize:P3TemporalFilter int VisualizeP3TemporalFiltering= 0 0 0 1 // Visualize averaged epochs (0=no 1=yes) (boolean)
Visualize:P3TemporalFilter int TargetERPChannel= 1 1 % % // Input channel for which to display ERP data
Filtering:LinearClassifier matrix Classifier= 2 { input%20channel input%20element%20(bin) output%20channel weight } 1 4 1 1 1 6 2 1 // Linear classification matrix in sparse representation
Visualize:Processing%20Stages int VisualizeLinearClassifier= 0 0 0 1 // Visualize LinearClassifier output (boolean)
System:Core%20Connections string SignalProcessingIP= 192.168.0.11 // (readonly)(noedit)
System:Core%20Connections string SignalProcessingPort= 60634 // (readonly)(noedit)
System:Version matrix SignalProcessingVersion= { Framework Revision Build Config Protocol } 1 3.6 N/A,%20N/A MSVC-19.16.27043.0-AMD64,%20release,%202020-10-23Z,%20facub@ USE_DYNAMIC_CRT:TRUE%20USE_OPENMP:ON%20USE_PRECOMPILED_HEADERS:ON%20USE_ASSERTS_IN_RELEASE_BUILDS:OFF 2.3 // SignalProcessing version information (noedit)(readonly)
System:Configuration matrix SignalProcessingFilterChain= 3 { Filter%20Name Position%20String } SpatialFilter 2.A P3TemporalFilter 2.B LinearClassifier 2.C // SignalProcessing filter chain (noedit)(readonly)
Connector:ConnectorInput list ConnectorInputFilter= 0 // list of state names or signal elements to allow, "*" for any, signal elements as in "Signal(1,0)"
Connector:ConnectorInput string ConnectorInputAddress= % localhost:20320 % % // IP address/port to read from, e.g. localhost:20320
Application:Application%20Window int WindowWidth= 600 640 0 % // width of Application window
Application:Application%20Window int WindowHeight= 600 480 0 % // height of Application window
Application:Application%20Window int WindowLeft= 0 0 % % // screen coordinate of Application window's left edge
Application:Application%20Window int WindowTop= 0 0 % % // screen coordinate of Application window's top edge
Application:Application%20Window string WindowBackgroundColor= 0x262b32 0x505050 % % // Application window background color (color)
Application:Application%20Window matrix WindowInfo= 1 1 auto // Application window information (readonly)(noedit)
Visualize:Application%20Window int VisualizeApplicationWindow= 0 0 0 1 // Display miniature copy of Application window (boolean)
Visualize:Application%20Window int AppWindowSpatialDecimation= 8 8 1 % // Application window decimation (shrinking) factor
Visualize:Application%20Window int AppWindowTemporalDecimation= 4 16 1 % // Application window time decimation factor
Application:AudioPlayback float AudioPlaybackRate= auto // audio playback sampling rate
Application:AudioPlayback int AudioPlaybackChannels= auto // number of playback output channels
Application:AudioPlayback float AudioPlaybackBufferDuration= auto // duration of playback buffer
Visualize:Application%20Log int ShowAppLog= 0 0 0 1 // Show application log window (boolean)
Application:Sequencing float PreRunDuration= 2 1 0 % // pause preceding first sequence
Application:Sequencing float PostRunDuration= 0 0 0 % // pause following last sequence
Application:Sequencing float PreSequenceDuration= 2s 2s 0 % // pause preceding sequences/sets of intensifications
Application:Sequencing float PostSequenceDuration= 2s 2s 0 % // pause following sequences/sets of intensifications
Application:Sequencing float StimulusDuration= 62.5ms 40ms 0 % // stimulus duration
Application:Sequencing string EarlyOffsetExpression= % // abort stimulus if this expression becomes true
Application:Sequencing float ISIMinDuration= 125ms 80ms 0 % // minimum duration of inter-stimulus interval
Application:Sequencing float ISIMaxDuration= 125ms 80ms 0 % // maximum duration of inter-stimulus interval
Application:Result%20Processing int InterpretMode= 2 0 0 2 // interpretation of results: 0 none, 1 online free mode, 2 copy mode (enumeration)
Application:Result%20Processing int DisplayResults= 0 1 0 1 // display results of copy/free spelling (boolean)
Application:Result%20Processing int AccumulateEvidence= 1 0 0 1 // accumulate evidence until a selection is made (boolean)
Application:Result%20Processing float MinimumEvidence= 0 0 0 % // do not make a selection unless target evidence exceeds this value. For a normalized classifier, MinimumEvidence approximates -2.3*log10(Error Probability)
Application:Sequencing int NumberOfSequences= 2 15 1 % // number of sequences in a set of intensifications
Application:Speller%20Targets matrix TargetDefinitions= 9 { Display Enter Display%20Size Icon%20File Sound Intensified%20Icon } A A 1 F:\Cognitask/sec/Rompecabezas/Musica/img7.png % % B B 1 F:\Cognitask/sec/Rompecabezas/Musica/img4.png % % C C 1 F:\Cognitask/sec/Rompecabezas/Musica/img1.png % % D D 1 F:\Cognitask/sec/Rompecabezas/Musica/img8.png % % E E 1 F:\Cognitask/sec/Rompecabezas/Musica/img5.png % % F F 1 F:\Cognitask/sec/Rompecabezas/Musica/img6.png % % G G 1 F:\Cognitask/sec/Rompecabezas/Musica/img2.png % % H H 1 F:\Cognitask/sec/Rompecabezas/Musica/img3.png % % I I 1 F:\Cognitask/sec/Rompecabezas/Musica/img9.png % % // speller target properties
Application:Speller%20Targets intlist NumMatrixColumns= 1 3 6 1 % // display matrices' column number(s)
Application:Speller%20Targets intlist NumMatrixRows= 1 3 6 0 % // display matrices' row number(s)
Application:Audio%20Stimuli int AudioStimuliOn= 0 0 0 1 // Audio Stimuli Mode (0=no, 1=yes) (boolean)
Application:Audio%20Stimuli matrix AudioStimuliRowsFiles= 6 { filename } ./voice/1.wav ./voice/2.wav ./voice/3.wav ./voice/4.wav ./voice/5.wav ./voice/6.wav // audio stimuli rows files 
Application:Audio%20Stimuli matrix AudioStimuliColsFiles= 6 { filename } ./voice/a.wav ./voice/b.wav ./voice/c.wav ./voice/d.wav ./voice/e.wav ./voice/f.wav // audio stimuli column files 
Application:Speller%20Targets floatlist TargetWidth= 1 33 0 0 100 // target width in percent of screen width
Application:Speller%20Targets floatlist TargetHeight= 1 33 0 0 100 // target height in percent of screen height
Application:Speller%20Targets floatlist TargetTextHeight= 1 0 0 0 100 // height of target labels in percent of screen height
Application:Speller%20Targets stringlist BackgroundColor= 1 0x000000 0x505050 % % // target background color (color)
Application:Speller%20Targets stringlist TextColor= 1 0x000000 0x505050 % % // text color (color)
Application:Speller%20Targets stringlist TextColorIntensified= 1 0x0000FF 0x505050 % % // intensified text color (color)
Application:Speller%20Targets intlist IconHighlightMode= 1 2 1 0 4 // icon highlight method 0: Show/Hide, 1: Intensify, 2: Grayscale, 3: Invert, 4: Dim    (enumeration)
Application:Speller%20Targets floatlist IconHighlightFactor= 1 0.5 0.5 0 % // scale factor for highlighted icon pixel values
Application:Speller int FirstActiveMenu= 1 1 1 % // Index of first active menu
Application:Speller float StatusBarSize= 0 0 0 100 // size of status bar in percent of screen height
Application:Speller float StatusBarTextHeight= 0 0 0 100 // size of status bar text in percent of screen height
Application:Speller string TextToSpell= % // character or string to spell in offline copy mode
Application:Speller string TextResult= % // user spelling result
Application:Speller int TestMode= 1 0 0 1 // select targets by clicking on their associated stimuli (0=no, 1=yes) (boolean)
Application:Speller string DestinationAddress= % // network address for speller output in IP:port format
Application:Text%20Window int TextWindowEnabled= 0 0 0 1 // Show Text Window (0=no, 1=yes) (boolean)
Application:Text%20Window int TextWindowLeft= 640 0 0 % // Text Window X location
Application:Text%20Window int TextWindowTop= 0 0 0 % // Text Window Y location
Application:Text%20Window int TextWindowWidth= 512 512 0 % // Text Window Width
Application:Text%20Window int TextWindowHeight= 512 512 0 % // Text Window Height
Application:Text%20Window string TextWindowFontName= Courier // Text Window Font Name
Application:Text%20Window int TextWindowFontSize= 10 4 1 % // Text Window Font Size
Application:Text%20Window string TextWindowFilePath= % // Path for Saved Text File (directory)
Application:Human%20Interface%20Devices string KeystrokeStateName= % // State to be translated into keystrokes (0-F), empty for off
Application:Human%20Interface%20Devices string KeystrokeExpression= % // Expression that evaluates to a virtual keycode, empty for off
Application:Human%20Interface%20Devices string KeystrokeExpressionOnStartRun= % // Expression that initializes expression variables on StartRun
Connector:ConnectorOutput string ConnectorOutputAddress= % localhost:20321 % % // one or more IP:Port combinations, e.g. localhost:20321
Application:Localization string Language= Default Default % % // Language for user messages
Application:Localization matrix LocalizedStrings= { German } { TIME%20OUT%20!!! Waiting%20to%20start%20... Sleeping--Select%20SLEEP%20twice%20to%20resume Select%20SLEEP%20once%20more%20to%20resume Paused--Select%20PAUSE%20again%20to%20resume } Zeit%20abgelaufen! Warte%20... Angehalten:%20Zweimal%20SLEEP%20fur%20Weiter Angehalten:%20Noch%20einmal%20SLEEP%20fur%20Weiter Angehalten:%20Noch%20einmal%20PAUSE%20fur%20Weiter // Localized user messages
System:Core%20Connections string ApplicationIP= 192.168.0.11 // (readonly)(noedit)
System:Core%20Connections string ApplicationPort= 60652 // (readonly)(noedit)
System:Version matrix ApplicationVersion= { Framework Revision Build Config Protocol } 1 3.6 N/A,%20N/A MSVC-19.16.27043.0-AMD64,%20release,%202020-11-12Z,%20facub@ USE_DYNAMIC_CRT:TRUE%20USE_OPENMP:ON%20USE_PRECOMPILED_HEADERS:ON%20USE_ASSERTS_IN_RELEASE_BUILDS:OFF 2.3 // Application version information (noedit)(readonly)
System:Configuration matrix ApplicationFilterChain= 4 { Filter%20Name Position%20String } ConnectorInput 2.9999 P3SpellerTask 3 KeystrokeFilter 3.1 ConnectorOutput 3.9999 // Application filter chain (noedit)(readonly)
System:Randomization int RandomSeed= 17367 0 % % // seed for the BCI2000 pseudo random number generator (readonly)
System:Randomization int RandomizationWarning= 1 1 0 1 // warn if subsequent Runs have identical RandomSeed value (boolean)
